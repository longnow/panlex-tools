; This file was edited using TECkitMappingEditorU.exe v0.9.0.0 on 6/23/2006.
;   Conversion Type = Legacy_to_from_Unicode
;   Left-hand side font = Annapurna;11.25
;   Right-hand side font = Arial Unicode MS;11.25
;   Main Window Position = 0,0,650,738
;   Code Point Window Position = 650,0,374,738

;Annapurna.map
;Copyright (c) 2002-2006 SIL International.

; Mapping table for South Asia Group's Annapurna font version 05

; Ver 1.0i sps 23-May-2008
; - Add high spacing dot (U+0971) and candra A (U+0972), additions to Unicode 5.1
; - Also Bob's addition of ma to characters taking extended ikar

; Ver 1.0h sps 12-Apr-2007
; - Add more "rogue" keyings to be recognized, at end of pass 1a

; Ver 1.0g rde 07-Mar-2007
; - Add reverse map for Latin digits and soft hyphen

; Ver 1.0f sps 20-Oct-2006.
; - Fix minor bugs in pass 1a, 1b

; Ver 1.0e sps 11-Sep-2006.
; - Detect o + c.bindu keyed as aa + e/cb combo
;   (This alternate keying is used by Newari, as it looks nicer than okar + cb)

; Ver 1.0d sps 31-Jul-2006. 
; - Added pass 1b to reorder diacritics
; - Modified rule in pass 3 (see comments there)
; - Incorporated final 1/2C+nukta reordering pass into pass 3
; - Minor bug fixes (decompose ru/ruu in pass 1; map 133, 177 and 217 correctly)

; Ver 1.0c (2002) done by rde based on Jonathan Kew's SIL-ANNAPURNA_05-2002 map.

EncodingName		"SIL-ANNAPURNA-05"
DescriptiveName		"Annapurna 05 Devanagari"
Version			"1.0i"
Contact			"mailto:steve_smith@sall.com"
RegistrationAuthority	"SIL International"
RegistrationName	"Devanagari-Annapurna-05"

RHSFlags		(ExpectsNFD)

; * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
; Pass 1a: regularize diacritic forms
; * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
pass(Byte)	; unpack 'combined' glyphs making them the left wallah
		; (e.g. use 0xF8 rather than 0xF9 for the ekar)

;chars which take center ("left") diacritic variants
class[cd] = (76 79 80 110 158 161)
    ; ka, kta, kra, jHa, pHa, pHa+ldot

;chars which take tent-r form of "lower r"
class[tentr] = (96 106 116 119 121 128 198 199)
    ; nga, cHa, Ta, THa, Da, DHa, SHTa, SHTHa

;chars which take lowered diacritics below
class[stack] = (78 97 98 99 100 101 102 105 117 118 120 122 169 184)
    ; kka nGka nGkHa nGga nGgHa nGnGa nGha cca TaTa TaTHa THTHa DDa mla lla

;chars which take extended form of ikar (don't forget the half-chars)
    		  ; ka ksHa kHa ga gHa ca cHa ja  za  Na  ta  tHa dHa na  ba  ma  la  sHa sa
    		  ; k- ksH- kH- g- gH- c- cH- j-      N-  tH- dH- n-  b-  l-  sH- s- 
class[extikar] = (76  81  83  85 89 103 106 107 109 129 131 136 144 152 162 167 180 191 200 \
		    77  82  84  86 90 104     108     130 137 149 153 163 181 192 201)

;chars which take extended form of iikar
class[extiikar] = (76 78 79 80 110 158 161)
    ; ka kka kta kra jHa pHa pHa+ldot

;diacritics which might occur between a diacritic to be adjusted and its base char
class[d] = (219 221 222 224 226 229 236 241 246 248 250 254)
    ; diacritics (regular forms only) for optional [d] in contexts

213	<>	248 222 	; ekar+candrabindu
214	<>	248 222 / [cd] [d]* _	; ekar+candrabindu left

220	<>	219 / [cd] [d]* _	; nukta left

223	<>	222 / [cd] [d]* _	; candrabindu left

225	<>	224 / [cd] [d]* _	; anusvara left

227	<>	226 / [cd] [d]* _	; lower-r left
228	<>	226 / [tentr] [d]* _	; tent-r

230	<>	229 / [cd] [d]* _	; reph left

233	<>	232 / _ [extikar]	; ikar long

235	<>	234 / [extiikar] [d]* _	; iikar long

237	<>	236 / [cd] [d]* _	; ukar left
238	<>	236 / [stack] [d]* _	; ukar low
239	<>	219 236 		; ukar+dot
240	<>	219 236 / [cd] [d]* _	; ukar+dot left

242	<>	241 / [cd] [d]* _	; uukar left
243	<>	241 / [stack] [d]* _	; uukar low
244	<>	219 241	; uukar+dot
245	<>	219 241 / [cd] [d]* _	; uukar+dot left

247	<>	246 / [cd] [d]* _	; rikar left

249	<>	248 / [cd] [d]* _	; ekar left

251	<>	250 / [cd] [d]* _	; aikar left

255	<>	254 / [cd] [d]* _	; virama left

178	<>  175 236	; decompose ru, so vowel and other diacs can be reordered
179	<>  175 241	; decompose ruu

; these are some alternate forms for various things that might have been entered
; in different ways (e.g. independent A + o maatra for independent O)
72 248	     > 73	; independent AI (keyed as E + ekar)
65 231 248   > 74	; independent O (keyed as A + aakar + ekar)
65 252	     > 74	; indepentedt O (keyed as A + okar)
65 231 250   > 75	; independent AU (keyed as A + aakar + aikar)
65 253	     > 75	; independent AU (keyed as A + aukar)
231 213	     > 252 222	; okar + cbindu (keyed as aakar + ekar/cb combo to look nicer)
65 231 213   > 74  222	; independent O + cbindu (keyed as A + aakar + ekar/cb combo)
72 213	     > 73 222	; independent AI + cbindu (keyed as E + ekar/cb combo)
231 248      > 252	; okar (keyed as aakar + ekar)
231 250	     > 253	; aukar (keyed as aakar + aikar)



; * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
; Pass 1b standardizes the order of diacritics to:
; 1. lodot 219
; 2. lor 226
; 3. halant 254
; 4. vowel 221,236,241,246,248,250
; 5. reph 229
; 6. nasal 222,224
; Previous versions of this table did not do this re-ordering, since our Keyman keyboard
; automatically reorders diacritics on input. However, that is not reliable because a user
; could click next to a syllable that already has a diacritic and add another one. Since
; Keyman cannot see the context, they would not be reordered in that case. Data with diacritics
; out of order does not transfer correctly, so we reorder here just to be sure.
; * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *

pass(Byte)
class[vwl] = (221 236 241 246 248 250)
class[nas] = (222 224)
(219=ld1 | 226=lor1 | 254=hal1 | [vwl]=v1 | 229=reph1 | [nas]=n1) \
(219=ld2 | 226=lor2 | 254=hal2 | [vwl]=v2 | 229=reph2 | [nas]=n2)? \
(219=ld3 | 226=lor3 | 254=hal3 | [vwl]=v3 | 229=reph3 | [nas]=n3)? \
(219=ld4 | 226=lor4 | 254=hal4 | [vwl]=v4 | 229=reph4 | [nas]=n4)? \
(219=ld5 | 226=lor5 | 254=hal5 | [vwl]=v5 | 229=reph5 | [nas]=n5)? \
(219=ld6 | 226=lor6 | 254=hal6 | [vwl]=v6 | 229=reph6 | [nas]=n6)? \
 <> @ld1 @ld2 @ld3 @ld4 @ld5 @ld6 \
   @lor1 @lor2 @lor3 @lor4 @lor5 @lor6 \
   @hal1 @hal2 @hal3 @hal4 @hal5 @hal6 \
   @v1 @v2 @v3 @v4 @v5 @v6 \
   @reph1 @reph2 @reph3 @reph4 @reph5 @reph6 \
   @n1 @n2 @n3 @n4 @n5 @n6



; * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
; Pass 2: decompose conjuncts/half forms
; * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
; THIS PASS WAS REMOVED (rde) because it isn't legitimate to decompose the stack
; characters to half-char + halant + full character (which is orthographically
; a different sequence).
;
; The rule is, consonant clusters (3 kinds) should render in Unicode as 
; they were in Annapurna:
; 1) stacks(unicode): C1 + halant + C2
; 2) half-char + full-char(unicode): C1 + halant + u200d (ZWJ) + C2
; 3) full-char + halant + full-char(unicode): C1 + halant + u200c (ZWNJ) + C2
; 
; where: 	ZWJ=zero-width joiner
;		ZWNJ=zero-width non-joiner
; 
; so if we decompose the stack as C1 + halant + C2, we won't be able to 
; distinguish it from sequence 3 above.


; * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
; Pass 3: rearrange syllable into Unicode order
; * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
; Byte order:
;	ikar?
;	(cons nukta? virama)*
;	cons nukta?
;	vowel?
;	reph?
;	nasal?
;
; Unicode order:
;	reph?
;	(cons nukta? virama)*
;	cons nukta?
;	(vowel | ikar)?
;	nasal?

pass(Byte)
;Classes for syllable reordering:
;basic full consonant codes
		; ka kha ga gha nga
		; ca cha ja jha(1) jha(2) nya
		; Ta Tha Da Dha Na
		; ta tha da dha na
		; pa pha ba bha ma
		; ya ra  la lla wa
		; sha Sha sa ha
class[FC] =  (76  83  85  89  96 \
		103 106 107 110 111 114 \
		116 119 121 128 129 \
		131 136 138 144 152 \
		155 158 162 165 167 \
		170 175 180 66  185 \
		191 196 200 204)

; k- k+sh- kh- g- jny- gh-
; c- j- jh(1)- jh(2)- ny- N-
; t- th- dh- n-
; p- ph- b- bh- m-
; y- cnctr-y- -r- l- w-
; sh- Sh- s-
class[HC] =  (77  82  84  86  88  90 \
		104 108 112 113 115 130 \
		132 137 149 153 \
		156 159 163 166 168 \
		171 174 177 181 186 \
		192 197 201)

; k+ka k+ta k+ra k+sha jnya 
; ng+ka ng+kha ng+ga ng+gha ng+nga ng+ha
; cca za(=ja+lowdot)
; TTa TTha ThTha DDa
; tta tra dda ddha dma dya dwa
; nna pta fa(=pha+lowdot) mla cnctr-ya lla w+lowdot
; shca shra shwa ShTa ShTHa sna sra 
; hna hma hya hra hla hwa hri
class[SC] =  (78  79  80  81  87   \
		97  98  99  100 101 102 \
		105 109  \
		117 118 120 122 \
		134 135 139 140 141 142 143 \
		154 157 161 169 173 184 187 \
		193 194 195 198 199 202 203  \
		205 206 207 208 209 210 211)

;nasalization (anusvara, candrabindu)
class[N] = (222 224)

;non-spacing vowel matras
; candra, ukar, uukar, rikar, ekar, aikar
class[VM] = (221 236 241 246 248 250)

;spacing vowel matras that follow the consonant (not ikar)
; aakar, iikar, okar, aukar
class[SVM] = (231 234 252 253)

; 'C' can go immediately before vowels (thus, full-consonants and full-stacks)
class[C] = ([FC] [SC])

; optional post-consonantal things (lowdot and low r)
class[PC] = (219 226)

; the rule:
; The tricky part here is 'cons': It should include all full-consonants and other consonant clusters.
; 232?=ikar ((([FC] 219? 0xfe)|([HC] 219?))* [C] [PC]?)=cons [V]?=vwl 229?=reph [N]?=nas \
;		<> @reph @cons @ikar @vwl @nas

; sps, 31-Jul-2006: Replaced the above rule with the one(s) below, changing it as follows:
; 1. Pulled lowdot and low-r out of the cons unit so that they can be handled independently.
;    Legacy data will have the dot between the consonant and the vowel (regardless of what order
;    they were typed in), because the legacy Keyman keyboard automatically put them in that order.
;    But if the lowdot applies to the vowel, it should follow the vowel in Unicode.
;    TO GET THIS BEHAVIOUR, comment out the first version of the rule, and activate the second one.
; 2. Ikar may be followed by lowdot so should be reordered with it. Note that if lowdot follows any
;    of the other spacing vowels (iikar, aakar, okar, aukar) it will be left there, regardless of
;    which rule is activated.
; 3. If the main consonant is followed by both low-r and lowdot, the lowdot almost certainly
;    applies to the consonant not the low-r, so should be reordered to be next to the consonant.

; Leave this rule active if lowdot (nukta) applies to the consonant
 (232 219?)?=ikar ((([FC] 219? 254)|([HC] 219?))* [C])=cons 219?=lowdot 226?=lowr [VM]?=vwlm \
	([SVM] 219?)?=svwl 229?=reph [N]?=nas <> @reph @cons @lowdot @lowr @ikar @vwlm @svwl @nas

; Activate this rule, and comment out the one above, if lowdot (nukta) applies to the vowel
; Note, outputting @ikar after @vwlm @lowdot assumes we will never have both ikar and a non-spacing
; vowel maatra (if we did, the ikar should come first). We do it this way so that the lowdot on the
; consonant does not get moved to follow the ikar.
; (232 219?)?=ikar ((([FC] 219? 254)|([HC] 219?))* [C])=cons 219?=lowdot 226?=lowr [VM]?=vwlm \
;	([SVM] 219?)?=svwl 229?=reph [N]?=nas <> @reph @cons @lowr @vwlm @lowdot @ikar @svwl @nas


; * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
; Pass 4: map byte codes to Unicodes
; * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
; This pass deals with "basic" byte codes; it never sees the "presentation form"
; byte codes for half forms/conjuncts/positional variants

pass(Byte_Unicode)

ByteClass[CTL] = ( 0 .. 31 127 )
UniClass[CTL]  = ( 0 .. 31 127 )

ByteClass[HC]  = (  77                      84                      86 \
                    90                      104                     108 \
                    113                     115                     130 \
                    132                     137                     149 \
                    153                     156                     159 \
                    163                     166                     168 \
                    171                     181                     186 \
                    192                     197                     201 )

UniClass[FC]   = (  devanagari_letter_ka    devanagari_letter_kha   devanagari_letter_ga \
                    devanagari_letter_gha   devanagari_letter_ca    devanagari_letter_ja \
                    devanagari_letter_jha   devanagari_letter_nya   devanagari_letter_nna \
                    devanagari_letter_ta    devanagari_letter_tha   devanagari_letter_dha \
                    devanagari_letter_na    devanagari_letter_pa    devanagari_letter_pha \
                    devanagari_letter_ba    devanagari_letter_bha   devanagari_letter_ma \
                    devanagari_letter_ya    devanagari_letter_la    devanagari_letter_va \
                    devanagari_letter_sha   devanagari_letter_ssa   devanagari_letter_sa )

[CTL] <> [CTL]

; all half-chars get the corresponding full char + virama + ZWJ
[HC]	<>	[FC] devanagari_sign_virama 0x200d 
[HC] 219 <>	[FC] devanagari_sign_nukta devanagari_sign_virama 0x200d

32	<>	space
33	<>	exclamation_mark
34	<>	quotation_mark
35	<>	number_sign
36	<>	dollar_sign
37	<>	percent_sign
38	<>	ampersand
39	<>	apostrophe
40	<>	left_parenthesis
41	<>	right_parenthesis
42	<>	asterisk
43	<>	plus_sign
44	<>	comma
45	<>	hyphen_minus
46	<>	full_stop
47	<>	solidus
48	<>	devanagari_digit_zero
48	<	digit_zero
49	<>	devanagari_digit_one
49  <	digit_one
50	<>	devanagari_digit_two
50  <	digit_two
51	<>	devanagari_digit_three
51  <	digit_three
52	<>	devanagari_digit_four
52  <	digit_four
53	<>	devanagari_digit_five
53  <	digit_five
54	<>	devanagari_digit_six
54  <	digit_six
55	<>	devanagari_digit_seven
55  <	digit_seven
56	<>	devanagari_digit_eight
56  <	digit_eight
57	<>	devanagari_digit_nine
57  <	digit_nine
58	<>	colon
59	<>	semicolon
60	<>	less_than_sign
61	<>	equals_sign
62	<>	greater_than_sign
63	<>	question_mark
64	<>	devanagari_om
65	<>	devanagari_letter_a
65 231	<>	devanagari_letter_aa
65 221	<>	U+0972		; devanagari letter candra A
65 231 221 <>	devanagari_letter_candra_o
66	<>	devanagari_letter_lla
67	<>	devanagari_letter_i
68	<>	devanagari_letter_ii
69	<>	devanagari_letter_u
70	<>	devanagari_letter_uu
71	<>	devanagari_letter_vocalic_r
72	<>	devanagari_letter_e
72 221	<>	devanagari_letter_candra_e
73	<>	devanagari_letter_ai
74	<>	devanagari_letter_o
75	<>	devanagari_letter_au
76	<>	devanagari_letter_ka

; 77	<>	devanagari_letter_ka devanagari_sign_virama 0x200d
78  <>	devanagari_letter_ka devanagari_sign_virama devanagari_letter_ka
79  <>  devanagari_letter_ka devanagari_sign_virama devanagari_letter_ta
80  <>  devanagari_letter_ka devanagari_sign_virama devanagari_letter_ra
81  <>  devanagari_letter_ka devanagari_sign_virama devanagari_letter_ssa
82  <>  devanagari_letter_ka devanagari_sign_virama devanagari_letter_ssa devanagari_sign_virama 0x200d

83	<>	devanagari_letter_kha

; 84  <>  devanagari_letter_kha devanagari_sign_virama 0x200d

85	<>	devanagari_letter_ga

; 86  <>  devanagari_letter_ga devanagari_sign_virama 0x200d
87  <>  devanagari_letter_ja devanagari_sign_virama devanagari_letter_nya
88  <>  devanagari_letter_ja devanagari_sign_virama devanagari_letter_nya devanagari_sign_virama 0x200d

89	<>	devanagari_letter_gha

; 90  <>  devanagari_letter_gha devanagari_sign_virama 0x200d

91	<>	left_square_bracket
92	<>	reverse_solidus
93	<>	right_square_bracket
94	<>	circumflex_accent
95	<>	low_line
96	<>	devanagari_letter_nga

97  <>  devanagari_letter_nga devanagari_sign_virama devanagari_letter_ka
98  <>  devanagari_letter_nga devanagari_sign_virama devanagari_letter_kha
99  <>  devanagari_letter_nga devanagari_sign_virama devanagari_letter_ga
100 <>  devanagari_letter_nga devanagari_sign_virama devanagari_letter_gha
101 <>  devanagari_letter_nga devanagari_sign_virama devanagari_letter_nga
102 <>  devanagari_letter_nga devanagari_sign_virama devanagari_letter_ha

103	<>	devanagari_letter_ca

; 104 <>  devanagari_letter_ca devanagari_sign_virama 0x200d
105 <>  devanagari_letter_ca devanagari_sign_virama devanagari_letter_ca

106	<>	devanagari_letter_cha
107	<>	devanagari_letter_ja

; 108 <>  devanagari_letter_ja devanagari_sign_virama 0x200d

109	<>	devanagari_letter_ja devanagari_sign_nukta	; combined forms deprecated DEVANAGARI_LETTER_ZA
110	 >	devanagari_letter_jha	; variant form: can't reverse this!
111	<>	devanagari_letter_jha

112  >  devanagari_letter_jha devanagari_sign_virama 0x200d ; variant form
; 113 <>  devanagari_letter_jha devanagari_sign_virama 0x200d

114	<>	devanagari_letter_nya

; 115 <>  devanagari_letter_nya devanagari_sign_virama 0x200d

116	<>	devanagari_letter_tta

117 <>  devanagari_letter_tta devanagari_sign_virama devanagari_letter_tta
118 <>  devanagari_letter_tta devanagari_sign_virama devanagari_letter_ttha

119	<>	devanagari_letter_ttha

120 <>  devanagari_letter_ttha devanagari_sign_virama devanagari_letter_ttha

121	<>	devanagari_letter_dda

122 <>  devanagari_letter_dda devanagari_sign_virama devanagari_letter_dda

123	<>	left_curly_bracket
124	<>	devanagari_danda
125	<>	right_curly_bracket
126	<>	tilde

128	<>	devanagari_letter_ddha
129	<>	devanagari_letter_nna

; 130 <>  devanagari_letter_nna devanagari_sign_virama 0x200d

131	<>	devanagari_letter_ta

; 132 <>  devanagari_letter_ta devanagari_sign_virama 0x200d

133	<>	U+097D	; devanagari_letter_glottal_stop, name not yet recognized

134 <>  devanagari_letter_ta devanagari_sign_virama devanagari_letter_ta
135 <>  devanagari_letter_ta devanagari_sign_virama devanagari_letter_ra

136	<>	devanagari_letter_tha

; 137 <>  devanagari_letter_tha devanagari_sign_virama 0x200d

138	<>	devanagari_letter_da

139 <>  devanagari_letter_da devanagari_sign_virama devanagari_letter_da
140 <>  devanagari_letter_da devanagari_sign_virama devanagari_letter_dha
141 <>  devanagari_letter_da devanagari_sign_virama devanagari_letter_ma
142 <>  devanagari_letter_da devanagari_sign_virama devanagari_letter_ya
143 <>  devanagari_letter_da devanagari_sign_virama devanagari_letter_va

144	<>	devanagari_letter_dha
145	<>	left_single_quotation_mark
146	<>	right_single_quotation_mark
147	<>	left_double_quotation_mark
148	<>	right_double_quotation_mark

; 149 <>  devanagari_letter_dha devanagari_sign_virama 0x200d

150    <      soft_hyphen
150	<>	en_dash
151	<>	em_dash
152	<>	devanagari_letter_na

; 153 <>  devanagari_letter_na devanagari_sign_virama 0x200d
154 <>  devanagari_letter_na devanagari_sign_virama devanagari_letter_na

155	<>	devanagari_letter_pa

; 156 <>  devanagari_letter_pa devanagari_sign_virama 0x200d
157 <>  devanagari_letter_pa devanagari_sign_virama devanagari_letter_ta

158	<>	devanagari_letter_pha

; 159 <>  devanagari_letter_pha devanagari_sign_virama 0x200d

161	<>	DEVANAGARI_LETTER_PHA devanagari_sign_nukta	; combined forms deprecated devanagari_letter_fa

162	<>	devanagari_letter_ba

; 163 <>  devanagari_letter_ba devanagari_sign_virama 0x200d

164	<>	currency_sign
165	<>	devanagari_letter_bha

; 166 <>  devanagari_letter_bha devanagari_sign_virama 0x200d

167	<>	devanagari_letter_ma

; 168 <>  devanagari_letter_ma devanagari_sign_virama 0x200d
169 <>  devanagari_letter_ma devanagari_sign_virama devanagari_letter_la

170	<>	devanagari_letter_ya

; 171 <>  devanagari_letter_ya devanagari_sign_virama 0x200d

172	<>	devanagari_double_danda
173	<>	devanagari_sign_virama devanagari_letter_ya
174	<>	devanagari_sign_virama devanagari_letter_ya devanagari_sign_virama 0x200d
175	<>	devanagari_letter_ra
176	<>	DEVANAGARI_ABBREVIATION_SIGN	; instead of degree_sign
177	<>	devanagari_letter_ra devanagari_sign_virama 0x200d	; eyelash r

178 <>  devanagari_letter_ra devanagari_vowel_sign_u
179 <>  devanagari_letter_ra devanagari_vowel_sign_uu

180	<>	devanagari_letter_la

; 181 <>  devanagari_letter_la devanagari_sign_virama 0x200d

182	<>	pilcrow_sign
183	<>	middle_dot

184 <>  devanagari_letter_la devanagari_sign_virama devanagari_letter_la

185	<>	devanagari_letter_va

; 186 <>  devanagari_letter_va devanagari_sign_virama 0x200d
187 <>  devanagari_letter_va devanagari_sign_nukta

188	<>	devanagari_digit_one fraction_slash devanagari_digit_four
188	<	vulgar_fraction_one_quarter
189	<>	devanagari_digit_one fraction_slash devanagari_digit_two
189	<	vulgar_fraction_one_half
190	<>	devanagari_digit_three fraction_slash devanagari_digit_four
190	<	vulgar_fraction_three_quarters

191	<>	devanagari_letter_sha

; 192 <>  devanagari_letter_sha devanagari_sign_virama 0x200d
193 <>  devanagari_letter_sha devanagari_sign_virama devanagari_letter_cha
194 <>  devanagari_letter_sha devanagari_sign_virama devanagari_letter_ra
195 <>  devanagari_letter_sha devanagari_sign_virama devanagari_letter_va

196	<>	devanagari_letter_ssa

; 197 <>  devanagari_letter_ssa devanagari_sign_virama 0x200d
198 <>  devanagari_letter_ssa devanagari_sign_virama devanagari_letter_tta
199 <>  devanagari_letter_ssa devanagari_sign_virama devanagari_letter_ttha

200	<>	devanagari_letter_sa

; 201 <>  devanagari_letter_sa devanagari_sign_virama 0x200d
202 <>  devanagari_letter_sa devanagari_sign_virama devanagari_letter_na
203 <>  devanagari_letter_sa devanagari_sign_virama devanagari_letter_ra

204	<>	devanagari_letter_ha

205 <>  devanagari_letter_ha devanagari_sign_virama devanagari_letter_na
206 <>  devanagari_letter_ha devanagari_sign_virama devanagari_letter_ma
207 <>  devanagari_letter_ha devanagari_sign_virama devanagari_letter_ya
208 <>  devanagari_letter_ha devanagari_sign_virama devanagari_letter_ra
209 <>  devanagari_letter_ha devanagari_sign_virama devanagari_letter_la
210 <>  devanagari_letter_ha devanagari_sign_virama devanagari_letter_va
211 <>  devanagari_letter_ha devanagari_vowel_sign_vocalic_r

212	<>	thin_space

215	<>	devanagari_sign_avagraha
216	<>	devanagari_sign_visarga
217	<>	U+0971		; Devanagari high spacing dot.
218	<>	middle_dot
219	<>	devanagari_sign_nukta

221	<>	devanagari_vowel_sign_candra_e
222	<>	devanagari_sign_candrabindu

224	<>	devanagari_sign_anusvara

226 <>  devanagari_sign_virama devanagari_letter_ra

229	<>	devanagari_letter_ra devanagari_sign_virama	; reph

231	<>	devanagari_vowel_sign_aa
231 221	<>	devanagari_vowel_sign_candra_o
232	<>	devanagari_vowel_sign_i

234	<>	devanagari_vowel_sign_ii

236	<>	devanagari_vowel_sign_u

241	<>	devanagari_vowel_sign_uu

246	<>	devanagari_vowel_sign_vocalic_r

248	<>	devanagari_vowel_sign_e

250	<>	devanagari_vowel_sign_ai

252	<>	devanagari_vowel_sign_o
253	<>	devanagari_vowel_sign_au
254	<>	devanagari_sign_virama 0x200c
