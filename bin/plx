#!/usr/bin/env perl
use strict;
no strict 'refs';
use encoding 'utf8';

use File::Spec::Functions qw/catdir catfile curdir rel2abs splitdir/;
use File::Copy qw/copy/;

usage(), exit(0) unless @ARGV;

utf8::upgrade($_) for @ARGV;
my $cmd = shift @ARGV;
my $cmd_sub = 'cmd_'.$cmd;

if (exists &$cmd_sub) {
    &$cmd_sub(@ARGV);
} else {
    print STDERR "Unknown command: $cmd\n\n";
    usage();
}

sub cmd_which {
    my ($source) = @_;

    print(STDERR "You need to specify a source label.\n"), return unless $source;
    check_env(qw/PANLEX_SOURCEDIR/);
    $source =~ tr/:/-/;
    
    foreach my $dir (qw/queued used/) {
        my $local_dir = catdir($ENV{PANLEX_SOURCEDIR}, $dir, $source);
        print ($local_dir, "\n"), return if -d $local_dir;
    }
}

sub cmd_cp {
    my ($tool) = @_;

    print(STDERR "You need to specify a tool.\n"), return unless $tool;
    check_env(qw/PANLEX_TOOLDIR/);

    $tool .= '.pl' unless $tool =~ /\./;

    my $curdir_path = rel2abs(curdir());
    my $curdir = (splitdir($curdir_path))[-1];

    foreach my $dir (
        ['serialize'], 
        ['serialize', 'sub'],
    ) {
        my $file = catfile($ENV{PANLEX_TOOLDIR}, @$dir, $tool);
        
        if (-e $file) {
            copy($file, $curdir_path);
            return;
        }
    }

    foreach my $dir (
        ['tabularize'], 
        ['tabularize', 'arabic'], 
        ['tabularize', 'html-curl'], 
        ['tabularize', 'lift'], 
        ['tabularize', 'main'], 
        ['tabularize', 'misc'], 
        ['tabularize', 'util'], 
    ) {
        my $file = catfile($ENV{PANLEX_TOOLDIR}, @$dir, $tool);

        if (-e $file) {
            copy($file, catfile($curdir_path, "${curdir}.${tool}"));
            return;
        }
    }
    
    print STDERR "could not find panlex tool $tool\n";
}

sub usage {
    print STDERR <<EOF;
Usage: $0 <command> [options]

Commands:

cp <tool>
    copy panlex tool into the current directory
which <source>
    prints the local directory for a source
    
Environment variables:

PANLEX_SOURCEDIR    local directory containing sources
PANLEX_TOOLDIR      local directory containing panlex-tools
EOF
}

sub check_env {
    my %error;
    
    foreach my $var (grep { !defined $ENV{$_} } @_) {
        print STDERR "The environment variable $var must be set to execute this command.\n";
        $error{$var} = 1;
    }
    
    foreach my $dir (grep { /DIR$/ && ! -d $ENV{$_} && !$error{$_} } @_) {
        print STDERR "The environment variable $dir ($ENV{$dir}) must be set to a valid directory to execute this command.\n";
        $error{$dir} = 1;
    }
    
    keys %error > 0 && exit(0);
}

sub shell_cmd {
    my (@cmd) = @_;
    print "@cmd\n";
    return system(@cmd) >> 8;
}
